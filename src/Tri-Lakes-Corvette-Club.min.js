
/*! Tri-Lakes-Corvette-Club 2015-07-18 */ ! function() {
    "use strict";
    angular.module("CorvetteClub.authorizednavbar.directive", []).directive("authorizedNavBar", ["$compile", "Template", function(a, b) {
        var c, d, e;
        return c = function(b) {
            var c = a(b);
            e.append(c(d))
        }, {
            restrict: "AE",
            replace: !0,
            link: function(a, f, g) {
                d = a, e = f, b.get("templates/Authorized/authorized-navbar.tpl.html", c)
            }
        }
    }])
}(),
function() {
    "use strict";
    angular.module("CorvetteClub.authorized.package", ["CorvetteClub.authorizednavbar.directive"])
}(),
function() {
    "use strict";
    angular.module("CorvetteClub.addpointer.directive", []).directive("addPointer", [function() {
        return {
            restrict: "A",
            link: function(a, b, c) {
                b.bind("mouseenter", function() {
                    b.css("cursor", "pointer")
                })
            }
        }
    }])
}(),
function() {
    "use strict";
    angular.module("CorvetteClub.autofocus.directive", []).directive("autoFocus", [function() {
        return {
            restrict: "A",
            require: "ngModel",
            link: function(a, b, c, d) {
                b.bind("focus", function() {
                    d.focus = !0
                }), b.bind("blur", function() {
                    d.focus = !1
                })
            }
        }
    }])
}(),
function() {
    "use strict";
    angular.module("CorvetteClub.global.clubeventsscroll.directive", []).directive("clubEvents", ["$compile", "Template", function(a, b) {
        var c, d, e;
        return c = function(b) {
            var c = a(b);
            e.append(c(d))
        }, {
            restrict: "AE",
            replace: !0,
            link: function(a, f, g) {
                d = a, e = f, b.get("templates/Global/club-events.tpl.html", c)
            }
        }
    }])
}(),
function() {
    "use strict";
    angular.module("CorvetteClub.global.setcarouselitemscustom.directive", []).directive("setCarouselItemsCustom", [function() {
        return {
            restrict: "A",
            link: function(a, b, c) {
                var d;
                d = angular.element(b[0].querySelector(".carousel-indicators")), d.removeClass("carousel-indicators"), d.addClass("carousel-indicators-custom")
            }
        }
    }]).directive("setCarouselIndicatorImage", [function() {
        return {
            restrict: "A",
            link: function(a, b, c) {
                var d, e;
                e = angular.element(document.querySelectorAll("li"));
                for (d in e) e.hasOwnProperty(d)
            }
        }
    }]).directive("slideClick", [function() {
        return {
            link: function(a, b, c) {
                b.bind("click", function() {
                    alert("Here")
                })
            }
        }
    }]).directive("activeSlide", [function() {
        return {
            link: function(a, b, c) {
                a.$watch(function() {
                    return b.attr("class")
                }, function(d) {
                    var e;
                    e = [], e = b[0].classList, e.contains("active") && (a.activeSlide = c.activeSlide)
                })
            }
        }
    }])
}(),
function() {
    "use strict";
    angular.module("CorvetteClub.slideshow.directive", []).directive("slideshow", ["$compile", "Template", function(a, b) {
        var c, d, e;
        return c = function(b) {
            var c = a(b);
            e.append(c(d))
        }, {
            restrict: "AE",
            replace: !0,
            link: function(a, f, g) {
                d = a, e = f, b.get("templates/Global/slideshow.tpl.html", c)
            }
        }
    }])
}(),
function() {
    "use strict";
    angular.module("CorvetteClub.global.templatecache.factory", []).factory("Template", ["$templateRequest", function(a) {
        return {
            get: function(b, c) {
                a(b, [!0]).then(function(a) {
                    void 0 !== c && c(a)
                })
            }
        }
    }])
}(),
function() {
    "use strict";
    angular.module("CorvetteClub.global.package", ["CorvetteClub.autofocus.directive", "CorvetteClub.addpointer.directive", "CorvetteClub.global.templatecache.factory", "CorvetteClub.slideshow.directive", "CorvetteClub.global.clubeventsscroll.directive", "CorvetteClub.global.setcarouselitemscustom.directive"])
}(),
function() {
    "use strict";
    angular.module("CorvetteClub.homepage.slideshow.controller", []).controller("CarouselDemoCtrl", ["$rootScope", "$scope", "$timeout", "GetImages", function(a, b, c, d) {
        b.myInterval = 5e3, a.activeSlide = {}, b.copiedSlides = {};
        var e = b.slides = [],
            f = [];
        f = d.getRecentForSlideShow(), b.addSlide = function(a) {
            e.push(a)
        };
        var g;
        for (g in f) f.hasOwnProperty(g) && b.addSlide(f[g])
    }])
}(),
function() {
    "use strict";
    angular.module("CorvetteClub.clubfeed.directive", []).directive("clubFeed", ["$compile", "Template", function(a, b) {
        var c, d, e;
        return c = function(b) {
            var c = a(b);
            e.append(c(d))
        }, {
            restrict: "AE",
            replace: !0,
            link: function(a, f, g) {
                d = a, e = f, b.get("templates/HomePage/club-feed.tpl.html", c)
            }
        }
    }])
}(),
function() {
    "use strict";
    angular.module("CorvetteClub.homepage.recentpictures.factory", []).factory("GetImages", [function() {
        var a, b;
        for (b = [], a = 0; 8 > a; a++) b.push({
            ImageId: a,
            image: "http://loremflickr.com/500/300/corvette?random=" + a,
            description: "This is simply a test image with an Id of " + a + ".",
            owner: "User" + a
        });
        return {
            getRecentForSlideShow: function() {
                return b
            }
        }
    }])
}(),
function() {
    "use strict";
    angular.module("CorvetteClub.homepage.package", ["CorvetteClub.clubfeed.directive", "CorvetteClub.homepage.recentpictures.factory", "CorvetteClub.homepage.slideshow.controller"])
}(),
function() {
    "use strict";
    angular.module("CorvetteClub.slide.animation", []).animation(".slide-animation", function() {
        return {
            addClass: function(a, b, c) {
                "ng-hide" == b ? TweenMax.to(a, 1.5, {
                    left: -a[0].parentElement.offsetWidth,
                    onComplete: c
                }) : c()
            },
            removeClass: function(a, b, c) {
                "ng-hide" == b ? (a.removeClass("ng-hide"), TweenMax.set(a, {
                    left: a[0].parentElement.offsetWidth
                }), TweenMax.to(a, 1.5, {
                    left: 0,
                    onComplete: c
                })) : c()
            }
        }
    })
}(),
function() {
    "use strict";
    angular.module("CorvetteClub.forgotpassword.modal.controller", []).controller("ForgotPasswordModalCtrl", ["$scope", "$modalInstance", "ForgotPasswordErrorCondition", function(a, b, c) {
        var d;
        d = this, d.form = {}, d.EmailAddressMaster = c.EmailAddressMaster, d.EmailAddressInvalid = c.EmailAddressInvalid, d.EmailAddressRequired = c.EmailAddressRequired, d.ok = function(c) {
            Object.keys(c.$error).length <= 0 && (b.close(d.EmailAddress), a.$broadcast("CloseModal"))
        }, d.cancel = function() {
            b.dismiss()
        }, a.$watch("$viewContentLoaded", function() {
            var a;
            for (a in d.forms) d.forms.hasOwnProperty(a) && void 0 !== d.forms[a] && a.indexOf("$") < 0 && (d.forms[a].focus = !1)
        })
    }])
}(),
function() {
    "use strict";
    angular.module("CorvetteClub.launchpage.controller", []).controller("LaunchPageCtrl", ["$interval", "$state", "$modal", "LaunchPageImages", "LaunchPageFooter", function(a, b, c, d, e) {
        var f;
        f = this, f.Images = [], f.Images = d.getImages(), f.currentIndex = 0, f.play = !0, f.playPauseTooltip = "Pause Slideshow", f.navBarCollapsed = !0, f.footer = e, f.setCurrentSlideIndex = function(a) {
            f.currentIndex = a
        }, f.animationsEnabled = !0, f.open = function(a) {
            var b = c.open({
                animation: f.animationsEnabled,
                templateUrl: "templates/LaunchPage/register.modal.html",
                controller: "RegisterModalCtrl",
                controllerAs: "registerModal",
                size: a,
                backdrop: "static",
                modal: "lg"
            });
            b.result.then(function(a) {
                alert(a), f.registerObject = a
            }, function() {
                console.log("Closed")
            })
        }, f.forgotPassword = function() {
            var a = c.open({
                animation: f.animationsEnabled,
                templateUrl: "templates/LaunchPage/forgot-password.modal.html",
                controller: "ForgotPasswordModalCtrl",
                controllerAs: "forgotPasswordModal",
                backdrop: "static",
                modal: "lg"
            });
            a.result.then(function(a) {
                alert(a), f.passwordRetrievalEmailAddress = a
            }, function() {
                console.log(f.passwordRetrievalEmailAddress)
            })
        }, f.playPause = function(a) {
            f.play = a ? !1 : !0, f.playPauseTooltip = a ? "Start Slideshow" : "Pause Slideshow"
        }, f.isCurrentSlideIndex = function(a) {
            return f.currentIndex === a
        }, f.prevSlide = function() {
            f.currentIndex = f.currentIndex < f.Images.length - 1 ? ++f.currentIndex : 0
        }, f.nextSlide = function() {
            f.currentIndex = f.currentIndex > 0 ? --f.currentIndex : f.Images.length - 1
        }, a(function() {
            f.play && f.nextSlide()
        }, 6e3), f.login = function() {
            b.go("app.authorized.home")
        }
    }])
}(),
function() {
    "use strict";
    angular.module("CorvetteClub.register.modal.controller", []).controller("RegisterModalCtrl", ["$scope", "$modalInstance", "RegisterErrorCondition", function(a, b, c) {
        var d;
        d = this, d.UsernameMaster = c.UsernameMaster, d.UsernameInvalidChar = c.UsernameInvalidChar, d.UsernameInvalidLength = c.UsernameInvalidLength, d.UsernameNonUnique = c.UsernameNonUnique, d.UsernameRequired = c.UsernameIsRequired, d.PasswordMaster = c.PasswordMaster, d.PasswordInvalidLength = c.PasswordInvalidLength, d.PasswordNonMatching = c.PasswordNonMatching, d.PasswordRequired = c.PasswordRequired, d.ConfirmPasswordRequired = c.ConfirmPasswordRequired, d.FirstNameMaster = c.FirstNameMaster, d.FirstNameInvalidChar = c.FirstNameInvalidChar, d.FirstNameRequired = c.FirstNameRequired, d.LastNameMaster = c.LastNameMaster, d.LastNameInvalidChar = c.LastNameInvalidChar, d.LastNameRequired = c.LastNameRequired, d.EmailAddressMaster = c.EmailAddressMaster, d.EmailAddressInvalid = c.EmailAddressInvalid, d.EmailAddressNonUnique = c.EmailAddressNonUnique, d.EmailAddressRequired = c.EmailAddressRequired, d.UsernameCharsEntered = 0, d.UsernameCharsMin = 3, d.UsernameCharsMax = 20, d.PasswordCharsMin = 7, d.PasswordCharsEntered = 0, d.ok = function(c) {
            Object.keys(c.$error).length <= 0 && (b.close(), a.$broadcast("CloseModal"))
        }, d.cancel = function() {
            b.dismiss("cancel")
        }, d.validateUsername = function(a) {
            var b;
            return b = /^[A-Za-z0-9_]*$/, b.test(a) ? (d.UsernameCharsEntered = void 0 === a ? 0 : a.length, !0) : (d.forms.Username.$setViewValue(a.substr(0, a.length - 1)), d.forms.Username.$rollbackViewValue(), !1)
        }, d.validateLength = function(a, b, c) {
            var e, f;
            return void 0 !== c && void 0 !== a ? (e = c[0], f = c[1], a.length < e || a.length > f ? (a.length > f && (d.forms[b].$setViewValue(a.substr(0, a.length - 1)), d.forms[b].$rollbackViewValue()), !1) : !0) : void 0
        }, d.validateUnique = function(a) {
            var b = a;
            a = b
        }, d.comparePasswords = function(a) {
            return void 0 !== a ? a === d.Password.substr(0, a.length) : !0
        }, d.UpdatePasswordLength = function() {
            d.PasswordCharsEntered = d.Password.length
        }, d.validateName = function(a, b) {
            var c;
            return c = /^[A-Za-z]*$/, c.test(a) ? !0 : (d.forms[b].$setViewValue(a.substr(0, a.length - 1)), d.forms[b].$rollbackViewValue(), !1)
        }, a.$watch("$viewContentLoaded", function() {
            var a;
            for (a in d.forms) d.forms.hasOwnProperty(a) && void 0 !== d.forms[a] && a.indexOf("$") < 0 && (d.forms[a].focus = !1);
            d.Password = ""
        })
    }])
}(),
function() {
    "use strict";
    angular.module("CorvetteClub.about.directive", []).directive("about", ["$templateRequest", "$compile", function(a, b) {
        return {
            restrict: "AE",
            replace: !0,
            transclude: !0,
            link: function(c, d, e) {
                var f = e;
                e = f, a("templates/LaunchPage/about.tpl.html", [!0]).then(function(a) {
                    var e = b(a);
                    d.append(e(c))
                })
            }
        }
    }])
}(),
function() {
    "use strict";
    angular.module("CorvetteClub.aboutscroll.directive", []).directive("aboutScroll", ["smoothScroll", function(a) {
        return {
            restrict: "A",
            link: function(b, c, d) {
                c.bind("click", function() {
                    var b, c;
                    c = d, b = {
                        duration: 1200,
                        easing: "easeInQuad"
                    }, a(document.getElementById("about"), b)
                })
            }
        }
    }])
}(),
function() {
    "use strict";
    angular.module("CorvetteClub.global.hidescroll.directive", []).directive("hideScroll", ["$window", "$document", function(a, b) {
        return {
            restrict: "A",
            link: function(b, c, d) {
                angular.element(a).bind("scroll", function() {
                    return parseInt(a.scrollY - c[0].offsetTop, 10) < parseInt(-600, 10) ? (c.css("visbility", "hidden"), void angular.element(document.getElementById("dLoginContainer")).css("visibility", "hidden")) : (angular.element(document.getElementById("dLoginContainer")).css("visibility", "visible"), !0)
                })
            }
        }
    }])
}(),
function() {
    "use strict";
    angular.module("CorvetteClub.login.directive", []).directive("login", ["$templateRequest", "$compile", function(a, b) {
        return {
            restrict: "AE",
            replace: !0,
            transclude: !0,
            link: function(c, d, e) {
                var f = e;
                e = f, a("templates/LaunchPage/login.tpl.html", [!0]).then(function(a) {
                    var e = b(a);
                    d.append(e(c))
                })
            }
        }
    }])
}(),
function() {
    "use strict";
    angular.module("CorvetteClub.loginscroll.directive", []).directive("loginScroll", ["smoothScroll", function(a) {
        return {
            restrict: "A",
            link: function(b, c, d) {
                c.bind("click", function() {
                    var b, c;
                    c = d, b = {
                        duration: 1200,
                        easing: "easeInQuad"
                    }, a(document.getElementById("login"), b)
                })
            }
        }
    }])
}(),
function() {
    "use strict";
    angular.module("CorvetteClub.playpause.directive", []).directive("playPause", ["$templateRequest", "$compile", function(a, b) {
        return {
            restrict: "AE",
            replace: !0,
            transclude: !0,
            link: function(c, d, e) {
                var f = e;
                e = f, a("templates/LaunchPage/play-pause.tpl.html", [!0]).then(function(a) {
                    var e = b(a);
                    d.append(e(c))
                })
            }
        }
    }])
}(),
function() {
    "use strict";
    angular.module("CorvetteClub.removemodal.directive", []).directive("removeModal", ["$document", "$timeout", function(a, b) {
        var c;
        return c = function() {
            b(function() {
                a[0].body.classList.remove("modal-open"), angular.element(a[0].getElementsByClassName("modal-backdrop")).remove(), angular.element(a[0].getElementsByClassName("modal")).remove()
            }, 50)
        }, {
            restrict: "A",
            link: function(a, b, d) {
                b.bind("click", function() {
                    c()
                }), a.$on("CloseModal", function() {
                    c()
                })
            }
        }
    }])
}(),
function() {
    "use strict";
    angular.module("CorvetteClub.launchpage.images.factory", []).factory("LaunchPageImages", [function() {
        var a, b;
        for (a = [], b = 0; 5 > b; b++) a.push({
            Id: b,
            Path: "images/Corvette" + b + ".jpg"
        });
        return {
            getImages: function() {
                return a
            }
        }
    }])
}(),
function() {
    "use strict";
    angular.module("CorvetteClub.footer.model", []).value("LaunchPageFooter", [{
        Text: "Register",
        State: "#",
        Function: "",
        Attribute: "login-scroll"
    }, {
        Text: "Login",
        State: "#",
        Function: "",
        Attribute: "login-scroll"
    }, {
        Text: "About",
        State: "#",
        Function: "",
        Attribute: "login-scroll"
    }, {
        Text: "Contact",
        State: "#",
        Function: "",
        Attribute: "login-scroll"
    }])
}(),
function() {
    "use strict";
    var a, b, c, d, e, f, g;
    a = "forgotPasswordModal.forms.EmailAddress.$error.email", b = "forgotPasswordModal.forms.EmailAddress.$error.required", c = "(forgotPasswordModal.forms.$submitted && forgotPasswordModal.forms.$invalid)", d = function(a) {
        return '!forgotPasswordModal.forms["' + a + '"].focus'
    }, e = function(a) {
        return 'forgotPasswordModal.forms["' + a + '"].$dirty'
    }, f = function() {
        return "forgotPasswordModal.forms.$submitted"
    }, g = function(a) {
        return 'forgotPasswordModal.forms["' + a + '"].$touched'
    }, angular.module("CorvetteClub.forgotpassword.errorcondition.model", []).value("ForgotPasswordErrorCondition", {
        EmailAddressInvalid: a + " && " + e("EmailAddress"),
        EmailAddressRequired: "(" + b + " && " + d("EmailAddress") + ") && (" + f() + " || " + g("EmailAddress") + ")",
        EmailAddressMaster: "(" + a + " && " + e("EmailAddress") + ") || (" + b + " && " + d("EmailAddress") + ") && (" + f() + " || " + g("EmailAddress") + ")"
    })
}(),
function() {
    "use strict";
    var a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s;
    a = "registerModal.forms.Username.$error.invalidChar", b = "registerModal.forms.Username.$error.invalidLength", c = "registerModal.forms.Username.$error.nonunique", d = "registerModal.forms.Username.$error.required", e = "registerModal.forms.Password.$error.invalidLength", g = "registerModal.forms.Password.$error.required", f = "registerModal.forms.ConfirmPassword.$error.nonmatching", h = "registerModal.forms.ConfirmPassword.$error.required", i = "registerModal.forms.FirstName.$error.invalidChar", j = "registerModal.forms.FirstName.$error.required", k = "registerModal.forms.LastName.$error.invalidChar", l = "registerModal.forms.LastName.$error.required", m = "registerModal.forms.EmailAddress.$error.email", n = "registerModal.forms.EmailAddress.$error.nonunique", o = "registerModal.forms.EmailAddress.$error.required", p = function(a) {
        return '!registerModal.forms["' + a + '"].focus'
    }, q = function(a) {
        return 'registerModal.forms["' + a + '"].$dirty'
    }, r = function() {
        return "registerModal.forms.$submitted"
    }, s = function(a) {
        return 'registerModal.forms["' + a + '"].$touched'
    }, angular.module("CorvetteClub.errorcondition.model", []).value("RegisterErrorCondition", {
        UsernameMaster: "((" + a + " || " + b + ") && " + q("Username") + ") || " + c + " || (" + d + " && " + p("Username") + ") && (" + r() + " || " + s("Username") + ")",
        UsernameInvalidChar: a + " && " + q("Username"),
        UsernameInvalidLength: b + " && " + q("Username"),
        UsernameNonUnique: c,
        UsernameIsRequired: "(" + d + " && " + p("Username") + ") && (" + r() + " || " + s("Username") + ")",
        PasswordMaster: "(" + e + " && " + q("Password") + ") || " + f + " || (" + g + " && " + p("Password") + ") && (" + r() + " || " + s("Password") + ") || (" + h + " && " + p("ConfirmPassword") + ") && (" + r() + " || " + s("ConfirmPassword") + ")",
        PasswordInvalidLength: e + " && " + q("Password"),
        PasswordNonMatching: f,
        PasswordRequired: "(" + g + " && " + p("Password") + ") && (" + r() + " || " + s("Password") + ")",
        ConfirmPasswordRequired: "(" + h + " && " + p("ConfirmPassword") + ") && (" + r() + " || " + s("ConfirmPassword") + ")",
        FirstNameMaster: "(" + i + " && " + p("FirstName") + ") || (" + j + " && " + p("FirstName") + ") && (" + r() + " || " + s("FirstName") + ")",
        FirstNameInvalidChar: i + " && " + q("FirstName"),
        FirstNameRequired: "(" + j + " && " + p("FirstName") + ") && (" + r() + " || " + s("FirstName") + ")",
        LastNameMaster: "(" + k + " && " + p("LastName") + ") || (" + l + " && " + p("LastName") + ") && (" + r() + " || " + s("LastName") + ")",
        LastNameInvalidChar: k + " && " + q("LastName"),
        LastNameRequired: "(" + l + " && " + p("LastName") + ") && (" + r() + " || " + s("LastName") + ")",
        EmailAddressMaster: "(" + m + " && " + q("EmailAddress") + ") || (" + o + " && " + p("EmailAddress") + ") && (" + r() + " || " + s("EmailAddress") + ")",
        EmailAddressInvalid: m + " && " + q("EmailAddress"),
        EmailAddressNonUnique: n + " && " + q("EmailAddress"),
        EmailAddressRequired: "(" + o + " && " + p("EmailAddress") + ") && (" + r() + " || " + s("EmailAddress") + ")"
    })
}(),
function() {
    "use strict";
    angular.module("CorvetteClub.launchpage.package", ["CorvetteClub.launchpage.controller", "CorvetteClub.launchpage.images.factory", "CorvetteClub.global.hidescroll.directive", "CorvetteClub.slide.animation", "CorvetteClub.playpause.directive", "CorvetteClub.loginscroll.directive", "CorvetteClub.register.modal.controller", "CorvetteClub.removemodal.directive", "CorvetteClub.errorcondition.model", "CorvetteClub.forgotpassword.modal.controller", "CorvetteClub.footer.model", "CorvetteClub.forgotpassword.errorcondition.model", "CorvetteClub.login.directive", "CorvetteClub.about.directive", "CorvetteClub.aboutscroll.directive"])
}(), angular.module("perfectParallax", []).directive("perfectParallax", ["$window", function(a) {
        return {
            restrict: "A",
            scope: {
                parallaxCss: "@",
                parallaxInitVal: "@",
                parallaxRatio: "@"
            },
            link: function(b, c, d) {
                function e() {
                    var b, d = a.pageYOffset * j + k;
                    b = h ? "" + g + "(" + d + "px)" : d + "px", c.css(f, b)
                }
                var f, g, h, i, j, k, l, m;
                m = d, i = b.parallaxCss ? b.parallaxCss : "top", l = i.split(":"), f = l[0], g = l[1], h = g ? !0 : !1, g || (g = f), j = b.parallaxRatio ? +b.parallaxRatio : 1.1, k = b.parallaxInitVal ? +b.parallaxInitVal : 0, c.css(f, k + "px"), a.addEventListener("scroll", e)
            }
        }
    }]),
    function() {
        "use strict";
        angular.module("TriLakesCorvetteClub", ["ui.router", "ui.validate", "ngAnimate", "CorvetteClub.launchpage.package", "ui.bootstrap", "smoothScroll", "perfectParallax", "CorvetteClub.global.package", "CorvetteClub.authorized.package", "CorvetteClub.homepage.package"]).config(["$stateProvider", "$urlRouterProvider", function(a, b) {
            b.otherwise("/CorvetteClub/Login"), a.state("app", {
                url: "/CorvetteClub",
                "abstract": !0,
                templateUrl: "templates/Root/home.html"
            }).state("app.launch", {
                url: "/Login",
                views: {
                    mainContent: {
                        templateUrl: "templates/LaunchPage/launch-page.html",
                        controller: "LaunchPageCtrl as launchPage"
                    }
                }
            }).state("app.authorized", {
                url: "/Members",
                "abstract": !0,
                views: {
                    mainContent: {
                        templateUrl: "templates/Authorized/content.html"
                    }
                }
            }).state("app.authorized.home", {
                url: "/Home",
                views: {
                    HomePage: {
                        templateUrl: "templates/HomePage/homepage.html"
                    }
                }
            })
        }])
    }();
